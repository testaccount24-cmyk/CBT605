//SOMITCWL JOB (xxxxxxxx,xxxx,1439,9999),LGNIXIT-SOMITCW,
//             CLASS=x,MSGCLASS=x,
//             NOTIFY=SOMITCW,COND=(0,NE)
//LGNIXIT EXEC HLASMCL,PARM.C=(NODECK,OBJECT,RENT),
//             PARM.L='REFR,RENT,REUS,AC=1,LIST,MAP'
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//         DD  DSN=SYS1.CAI.CAIMAC,DISP=SHR
//         DD  DSN=SYS1.SORCPROD,DISP=SHR  For the VCCS CVTUSER DSECT
//* SYS1.SORCPROD must be after MACLIB with the WTO MACRO
PASS     TITLE 'LGNIXIT - Record ACF2 Passwords'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*   Title: LGNIXIT
*
*   Author: I ain't saying.
*
*   Date-written:  8-17-1998
*
*   Change Log:
*
* xx-xx-xx x
*  x.x.x.
*
*   Remarks:
*
*        This exit gets control when a user logs on to ACF2.
*   It saves a user's userid, password, new-password, date, and
*   time in a table in ECSA.
*   Program SAVEPSWD will write the data to disk file.
*
* 7.10 Logon Prevalidation Exit (LGNIXIT)
*
* The Logon Prevalidation exit (LGNIXIT) enables you to inspect and
* modify the system entry validation data in the ACVALD parameter
* list.  You can use this exit to alter logon source information,
* validate TSO passwords to ensure conformity to your standards, or
* change the logonid used in logon processing.  LGNIXIT also enables
* you to abort the logon.
*
* LGNIXIT is a self-contained load module residing in the link pack
* area (LPA).  Specify the name of the module in the LGNIXIT field of
* the GSO EXITS record.
*
* When LGNIXIT receives control, it is passed the addresses of the
* logon preprompt parameters and the ACVALD parameter list.  You can
* modify the ACVALD parameter list but not the logon preprompt
* parameters.  CA-ACF2 performs this updating.
*
* Specification:  GSO EXITS record, LGNIXIT field.
*
* Attributes:  AMODE 31, RMODE ANY
*
* Input:  The Logon Prevalidation exit is entered in the
* problem state and must be reentrant.  It receives the
* following parameters upon entry:
* R0   The address of ACVALD, the CA-ACF2 system entry validation
*      parameter list.
* R1   The address of the logon preprompt parameters.
*
* Output:  The Logon Prevalidation exit must restore registers
*      R2-R14 and set a return code in R15.
*
* R15  Set one of the following return codes:
*      0       Continue the logon.
*      nonzero Abort the logon attempt.
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
LGNIXIT  CSECT ,
LGNIXIT  AMODE 31
LGNIXIT  RMODE ANY
         SAVE  (14,12),,LGNIXIT.&SYSDATE..&SYSTIME  Save caller's regs.
         LR    R12,R15            Load address of entry point
         USING LGNIXIT,R12        Give assembler program's base reg.
         LR    R11,R0             Load the address of the ACVALD
         USING ACVALD,R11         Addressing ACVALD
         L     R9,16              Load the address of the CVT
         ICM   R8,B'1111',CVTUSER-CVT(R9)  Address CVTUSER points to
         BZ    RETURN             If no CVTUSER cannot save, get out
GOTUSER  DS    0H
         USING XCVTUSER,R8        Tell assembler about DSECT
         CLC   XCVTUEYE,CCVTUSER  See if the CVTUSER area is mine
         BNE   BADUSER            If someone else has CVTUSER, go tell
         ICM   R8,B'1111',XCVTPSWD  Address CVTUSER points to
         USING SAVEPW,R8          Tell assembler about DSECT
         BZ    RETURN             No CVT Anchor, SAVEPSWD not run yet
         CLC   EYECATCH,CLGNIXIT  See if the save area starts okay
         BNE   BADANCH            Bad CVT Anchor, should not occur
RETRY    DS    0H
         CLC   FULL,NEXTSAVE      See if table is full
         BL    ITISFULL           Table is full, go tell and exit
         CLC   NEARFULL,NEXTSAVE  See if table is 75% full
         BE    DUMPIT             Close to full, go dump it
SAVEUSER DS    0H
         L     R9,NEXTSAVE        Load address of next save space
         LA    R7,ENTRYSZ(,R9)    Calculate the next entry address
         CS    R9,R7,NEXTSAVE     Change the current address to next
         BNZ   RETRY              If change failed, go try again
         MVC   0(24,R9),MASK      Mask userid, password, & new-password
         XC    0(24,R9),ACVLID    Save userid, password, & new password
         DROP  R11                Don't need ACF2 ACVALD anymore
         TIME  DEC                Get date and time
         X     R1,MASK            Mask the date
         ST    R1,24(,R9)         Store the date
         X     R0,MASK            Mask the time
         ST    R0,28(,R9)         Store the time
*        B     RETURN             Go to exit, message first line okay
         DROP  R8                 Drop pointer to area for SAVEPW table
RETURN   DS    0H
         SLR   R15,R15            Set a return code of zero
         RETURN (14,12),RC=(15)   Return to caller, return code zero
*
BADUSER  DS    0H
         WTO   'ACF2 exit LGNIXIT found a bad CVTUSER area',ROUTCDE=11
         B     RETURN             Exit the exit quick
*
BADANCH  DS    0H
         WTO   'ACF2 exit LGNIXIT found a bad ANCHOR area',ROUTCDE=11
         B     RETURN             Exit the exit quick
*
DUMPIT   DS    0H
         WTO   'ACF2 exit LGNIXIT area is near full',ROUTCDE=(1,11)
         WTO   'Exit will issue command: S R,Q=SAVE#JOB',ROUTCDE=(1,11)
         SLR   R0,R0              Set console zero
         LA    R1,STARTCMD        Load addr. of the command for SVC 34
         SVC   34                 Issue command: S R,Q=SAVE#JOB
         B     SAVEUSER           Return to save user and password data
*
ITISFULL DS    0H
         WTO   'ACF2 exit LGNIXIT save storage area is full',ROUTCDE=11
         WTO   'May need to run: S R,Q=SAVE#JOB',ROUTCDE=(1,11)
         B     RETURN             Exit the exit quick
*
CCVTUSER DC    CL7'CVTUSER',XL1'1' Constant to init and check CVTUSER
CLGNIXIT DC    CL7'LGNIXIT',XL1'1' Constant to init and check SAVEPW
STARTCMD DC    AL2(23),AL2(0),CL19'START R,Q=SAVE#JOB '
         DS    0F                 Align mask for 'X' op-code
MASK     DC    CL24'vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv'  Encryption mask
*
         COPY  CVTUSER            VCCS user DSECT in SYS1.SORCPROD
*
* XCVTUSER DSECT ,
* XCVTUEYE DS    CL8              7 bytes of 'CVTUSER' and 1 byte X'01'
* XCVTUVOL DS    XL6              VOLSER from message used by IEC507D
*          DS    XL2              Space available for expansion
* XCVTUTIM DS    XL6              CYYDDDHHMMSS Century, Year,Day, Hour,
*                                 Minute, and Second, used by IOS000I
*          DS    XL2              Space available for expansion
* XCVTPSWD DS    F                ACF2 LGNIXIT anchor, used by SAVEPSWD
*          DS    XL20             Space available for expansion
* XCVTUSIZ EQU   *-XCVTUSER       Length of area pointed to by CVTUSER
*
*
*
SAVEPW   DSECT ,
EYECATCH DS    CL8                7 bytes of 'LGNIXIT' and 1 byte X'01'
NEXTSAVE DS    F                  Address of current available entry
NEARFULL DS    F                  Addr. of end of 75% pswd storage area
FULL     DS    F                  Addr. of end of password storage area
ENTRIES  DS    XL32680            Location to save passwords in
ENTRYSZ  EQU   32                 Thirty-Two bytes per entry
SAVEPWSZ EQU   *-SAVEPW           Length of the password entry storage
*
         ACVALD DSECT=YES         ACF2 exit parameter list from reg.0
*
         CVT   DSECT=YES          MVS's Communications Vector Table
*
R0       EQU   0
R1       EQU   1                  R
R2       EQU   2                    E
R3       EQU   3                      G
R4       EQU   4                        I
R5       EQU   5                          S
R6       EQU   6                            T
R7       EQU   7                              E
R8       EQU   8                                R
R9       EQU   9                  E
R10      EQU   10                   Q
R11      EQU   11                     U
R12      EQU   12                       A
R13      EQU   13                         T
R14      EQU   14                           E
R15      EQU   15                             S
         END   ,
//L.SYSLMOD DD DSN=SYS1.LOADPROD,DISP=SHR,SPACE=
 NAME LGNIXIT
