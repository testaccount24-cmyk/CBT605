//SOMITCWP JOB (xxxxxxxx,xxxx,1439,9999,9999),PRTPSWD2-SOMITCW,
//             CLASS=x,MSGCLASS=x,
//             NOTIFY=SOMITCW,COND=(0,NE)
//PRTPSWD2 EXEC HLASMCL,PARM.C=(NODECK,OBJECT,RENT),
//             PARM.L='REFR,RENT,REUS,AC=1,LIST,MAP' ? AC=1 ? Why ?
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR ? SYS1.MODGEN ? Why ?
PASS     TITLE 'PRTPSWD2 - Prints a space between userids'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*   Title: PRTPSWD2
*
*   Author: I ain't saying.
*
*   Date-written:  1999-08-04
*
*   Change Log:
*
* 99-12-30  Added ALTUSER DCB, logic, etc.
*  W.A.M.
*
*   Remarks:
*
*        Copies the sorted output of PRTPSWD and puts a
*   blank record everytime a new userid is encountered.
*   Also creates a file with possible ALTUSER commands to
*   change passwords.
*
* Attributes:  AMODE 31, RMODE ANY, RENT
*
* Input:  ACF2 Log on ID and Password table
* Outputs: Sorted and formatted log on id and password table.
*
* Sample JCL:
* //PRTPSWD EXEC PGM=PRTPSWD,TIME=9999
* //CHECKDSN DD  DSN=SYS1.SAVEPSWD.PRINT,DISP=SHR  Make sure it exists
* //INPUT    DD  DSN=SYS1.SAVEPSWD,DISP=MOD
* //OUTPUT   DD  UNIT=VIO,SPACE=(CYL,(50,50)),DISP=(,PASS),
* //             RECFM=FB,LRECL=48
* //SYSUDUMP DD  SYSOUT=*
* //SORT    EXEC PGM=SORT,TIME=9999
* //SYSOUT   DD  SYSOUT=*
*  SORT FIELDS=(2,8,CH,A,29,20,CH,D)
* //SORTIN   DD  DSN=*.PRTPSWD.OUTPUT,DISP=(OLD,DELETE)
* //SORTOUT  DD  UNIT=VIO,SPACE=(CYL,(50,50)),DISP=(,PASS),
* //             RECFM=FB,LRECL=48
* //PRTPSWD2 EXEC PGM=PRTPSWD2,TIME=9999
* //INPUT    DD  DSN=*.SORT.SORTOUT,DISP=(OLD,DELETE)
* //OUTPUT   DD  DSN=SYS1.SAVEPSWD.PRINT,DISP=SHR
* //ALTUSER  DD  DSN=SYS1.SAVEPSWD.ALTUSER,DISP=SHR
* //SYSUDUMP DD  SYSOUT=*
*
*  R10 = Input/output record location
*  R11 = Branch and link return address
*  R12 = Base register
*  R13 = Register save area and work area
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
PRTPSWD2 CSECT ,
PRTPSWD2 AMODE 31
PRTPSWD2 RMODE ANY
         SAVE  (14,12),,PRTPSWD2.&SYSDATE..&SYSTIME Save caller's regs.
         LR    R12,R15            Load address of entry point
         USING PRTPSWD2,R12       Give assembler program's base reg.
         GETMAIN R,LV=SAVESIZE,LOC=BELOW  Get storage to put DCB in
         XC    0(CLEARSIZ,R1),0(R1)  Clear first part of save/work area
         ST    R1,8(,R13)         Save new save area addr.in old area
         ST    R13,4(,R1)         Save old save area addr.in new area
         LR    R13,R1             Replace old save area with new one
         USING SAVEAREA,R13       Tell assembler about save area
         MVC   ALTCMD,ALTR        Move ALTUSER command templet record
         MVC   DCB(HALF),PROTO    Copy half of DCBs,DCBEs,etc
         MVC   DCB+HALF(HALF),PROTO+HALF Copy other half of proto
         LA    R1,DCB+DCBEIN      Load address of input DCBE
         ST    R1,DCB             Update input DCB with DCBE address
         LA    R1,DCB+DCBEOUT     Load address of output DCBE
         ST    R1,DCB+DCBOUT      Update output DCB with DCBE address
         LA    R1,DCB+DCBEALT     Load address of ALTUSER DCBE
         ST    R1,DCB+DCBALT      Update ALTUSER DCB with DCBE address
         MVI   SAVENAME,X'FF'     Insure previous userid is invalid
         LA    R1,DCB+OCPL        Find Open/Close parameter list
         OPEN  (DCB,INPUT),MODE=31,MF=(E,(1))  Open INPUT DCB
         LA    R1,DCB+OCPL        Find Open/Close parameter list
         OPEN  (DCB+DCBOUT,OUTPUT),MODE=31,MF=(E,(1)) Open OUTPUT DCB
         LA    R1,DCB+OCPL        Find Open/Close parameter list
         OPEN  (DCB+DCBALT,OUTPUT),MODE=31,MF=(E,(1)) Open ALTUSER DCB
         PUT   DCB+DCBALT,ALTREXX Write initial ALTUSER record
         LA    R10,HEADING0       Load address of new output record
         BAL   R11,PUT            Go write the record
         LA    R10,HEADING1       Load address of new output record
         BAL   R11,PUT            Go write the record
         LA    R10,HEADING2       Load address of new output record
         BAL   R11,PUT            Go write the record
         LA    R10,HEADING3       Load address of new output record
         BAL   R11,PUT            Go write the record
         LA    R10,HEADING4       Load address of new output record
         BAL   R11,PUT            Go write the record
         LA    R10,HEADING5       Load address of new output record
         BAL   R11,PUT            Go write the record
         LA    R10,BLANKS         Load address of new output record
         BAL   R11,PUT            Go write the record
         LA    R10,HEADING7       Load address of new output record
         BAL   R11,PUT            Go write the record
         LA    R10,HEADING8       Load address of new output record
         BAL   R11,PUT            Go write the record
         LA    R10,BLANKS         Load address of new output record
         BAL   R11,PUT            Go write the record
         LA    R10,HEADING9       Load address of new output record
         BAL   R11,PUT            Go write the record
         LA    R11,GET            Set the new PUT return address
GET      DS    0H
         GET   DCB                Get a record
         LR    R10,R1             Save the record address
         CLC   SAVENAME,1(R10)    See if the same userid as last one
         BNE   NEWUSER            Not same, go insert blank line
PUT      DS    0H
         PUT   DCB+DCBOUT,(R10)   Write an input record to output
         BR    R11                Go to get the next record
NEWUSER  DS    0H
         MVC   SAVENAME,1(R10)    Save the new userid
         PUT   DCB+DCBOUT,BLANKS  Write a line of blanks
         MVC   ALTCMD+ALTUSRID(8),1(R10) Put userid in ALTUSER RECORD
         CLI   19(R10),X'00'      See if a new password
         BE    OLDPSWD            New password, go move it
         CLI   19(R10),X'FF'      See if a new password
         BE    OLDPSWD            New password, go move it
         CLI   19(R10),C' '       See if a new password
         BH    NEWPSWD            New password, go move it
OLDPSWD  DS    0H
         MVC   ALTCMD+ALTPSWD(8),10(R10)  Move the password to record
PUTALT   DS    0H
         PUT   DCB+DCBALT,ALTCMD  Write an ALTUSER record
         B     PUT                Go back to write the input record
NEWPSWD  DS    0H
         MVC   ALTCMD+ALTPSWD(8),19(R10)  Move new password to record
         B     PUTALT             Go back to write the ALTUSER record
EODAD    DS    0H
         LA    R1,DCB+OCPL        Find Open/Close parameter list
         CLOSE DCB+DCBALT,MODE=31,MF=(E,(1)) Close ALTUSER DCB
         LA    R1,DCB+OCPL        Find Open/Close parameter list
         CLOSE DCB+DCBOUT,MODE=31,MF=(E,(1)) Close OUTPUT DCB
         LA    R1,DCB+OCPL        Find Open/Close parameter list
         CLOSE DCB,MODE=31,MF=(E,(1))  Close INPUT DCB
         LR    R1,R13             Save new save area addr. for FREEMAIN
         L     R13,4(,R13)        Restore old save area address
         FREEMAIN R,LV=SAVESIZE,A=(1)  Release save and DCB storage
         SLR   R15,R15            Set a return code of zero
         RETURN (14,12),RC=(15)   Return to caller, return code zero
*
PROTO    DS    0D                 Insure a double word alignment
DCBIN    EQU   *-PROTO            Displacement for input DCB
         DCB   DDNAME=INPUT,DSORG=PS,MACRF=GL,RECFM=FB,LRECL=48,       X
               DCBE=*-*  Address of copy of DCBEIN
DCBEIN   EQU   *-PROTO            Displacement for input DCBE
         DCBE  RMODE31=BUFF,EODAD=EODAD  DCBE for the INPUT DCB
* Note: A DCBE with EODAD must be in modifiable storage.  i.e. GETMAIN
DCBOUT   EQU   *-PROTO            Displacement for output DCB
         DCB   DDNAME=OUTPUT,DSORG=PS,MACRF=PM,RECFM=FB,LRECL=48,      X
               DCBE=*-*  Address of copy of DCBEOUT
DCBEOUT  EQU   *-PROTO            Displacement for output DCBE
         DCBE  RMODE31=BUFF       DCBE for the OUTPUT DCB
ALTLRECL EQU   48                 LRECL for ALTUSER
DCBALT   EQU   *-PROTO            Displacement for ALTUSER DCB
         DCB   DDNAME=ALTUSER,DSORG=PS,MACRF=PM,RECFM=FB,              X
               LRECL=ALTLRECL,DCBE=*-*  ADDRESS of copy of DCBEALT
DCBEALT  EQU   *-PROTO            Displacement for ALTUSER DCBE
         DCBE  RMODE31=BUFF       DCBE for the OUTPUT DCB
OCPL     EQU   *-PROTO            Displacement for OPEN/CLOSE parm list
         OPEN  (*-*),MF=L,MODE=31 OPEN/CLOSE parameter list
DCBASIZE EQU   *-PROTO            Size of DCBs, DCBEs, and Parm-List
HALF     EQU   DCBASIZE/2         Half size of DCBs,DCBEs,ParmList Area
*
HEADING0 DC    CL48'     The following list is in order by user id. '
HEADING1 DC    CL48'  Each userid is separate with a blank line.    '
HEADING2 DC    CL48'  Use a find command to find: i.e. F '' '' 2      '
HEADING3 DC    CL48'  Each userid is sorted in reverse order by date'
HEADING4 DC    CL48'  and time.                                     '
HEADING5 DC    CL48'  i.e. the top password is the last attempted.  '
BLANKS   DC    CL48'  '            A blank line to separate log on ids
HEADING7 DC    CL48'  Warning: Passwords are the ones that a user   '
HEADING8 DC    CL48'  entered, they may NOT have worked.            '
* BLANKS DC    CL48'  '            A blank line
HEADING9 DC    CL48' User-id  Password New-Pswd  Date     Time      '
ALTREXX  DC CL(ALTLRECL)' /* Rexx: TSO EX ''SYS1.SAVEPSWD.ALTUSER'' */'
ALTR DC CL(ALTLRECL)'''ALTUSER xxxxxxxx PASSWORD(XXXXXXXX) NOEXPIRED'''
*                     123456789 123456789 123456789 123456789 1234567
ALTUSRID EQU   9,8,C'C'           Displacement of ALTUSER userid
ALTPSWD  EQU   27,8,C'C'          Displacement of ALTUSER password
*
SAVEAREA DSECT ,                  Register save area and work area
         DS    18F                Register save area
CLEARSIZ EQU   *-SAVEAREA         Save and work area size
ALTCMD   DS    XL(ALTLRECL)       ALTUSER output record area
DCB      DS    XL(DCBASIZE)       DCB, DCBE, and O/C parm-list
SAVENAME DS    CL8                Area to save user id for compare
SAVESIZE EQU   *-SAVEAREA         Save and work area size
*
R0       EQU   0
R1       EQU   1                  R
R2       EQU   2                    E
R3       EQU   3                      G
R4       EQU   4                        I
R5       EQU   5                          S
R6       EQU   6                            T
R7       EQU   7                              E
R8       EQU   8                                R
R9       EQU   9                  E
R10      EQU   10                   Q
R11      EQU   11                     U
R12      EQU   12                       A
R13      EQU   13                         T
R14      EQU   14                           E
R15      EQU   15                             S
         END   ,
//L.SYSLMOD DD DSN=SYS1.LOADTEST,DISP=SHR,SPACE=
 NAME PRTPSWD2
